{"version":3,"sources":["../../../src/use-resize-observer/use-resize-observer.ts","components/record/Record.styled.ts","components/record/Record.tsx","components/artist/ArtistDetail.styled.ts","components/artist/ArtistDetail.tsx"],"names":["marquee","keyframes","Record","styled","button","Cover","div","loaded","undefined","fadeIn","CoverImage","img","Marquee","span","cover","name","useState","setLoaded","useResizeObserver","ref","rect","labelRef","useRef","duration","current","scrollWidth","width","onClick","console","log","style","Math","round","Fallback","src","alt","onLoad","height","ArtistDetail","section","Artist","BaseArtist","slideInLeft","image","albums","albumCount","length","List","map","index"],"mappings":"2IACM,EAAe,CACnB,EAAG,EACH,EAAG,EACH,MAAO,EACP,OAAQ,EACR,IAAK,EACL,KAAM,EACN,OAAQ,EACR,MAAO,GAEH,EAA4B,qBAAX,O,gDCRjBA,EAAUC,oBAAH,0LAYAC,EAASC,UAAOC,OAAV,geAiBAJ,GAQNK,EAAQF,UAAOG,IAAV,yoDAsBH,qBAAGC,OAAuB,UAAOC,IA8C7BC,KAKNC,EAAaP,UAAOQ,IAAV,mJAEV,qBAAGJ,OAAuB,EAAI,KAM9BK,EAAUT,UAAOU,KAAV,oM,OCpELX,EAtCY,SAAC,GAAqB,IAAD,IAAlBY,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAAW,EAClBC,oBAAS,GADS,mBACvCT,EADuC,KAC/BU,EAD+B,OFHzC,WACL,IAAM,EAAU,iBAAO,GACjB,EAAM,iBAAO,MAFe,EAGV,mBAAS,GAHC,mBAG3B,EAH2B,KAGrB,EAHqB,KAI5B,EAAW,mBAAQ,kBAAM,EAAU,IAAI,gBAAe,SAAC,GAC3D,IAAM,EAAQ,EAAQ,GAClB,IACF,qBAAqB,EAAQ,SAC7B,EAAQ,QAAU,uBAAsB,WAClC,EAAI,SACN,EAAQ,EAAM,oBAIjB,OAAM,IAYT,OAXA,OAAF,YAAE,EAAQ,WAIR,OAHI,EAAI,SACA,EAAG,QAAQ,EAAI,SAEhB,WACC,EAAG,aACL,EAAQ,SACF,qBAAa,EAAQ,YAGhC,CAAC,EAAI,UACD,CAAC,EAAK,GErBOC,GAF0B,mBAEvCC,EAFuC,KAElCC,EAFkC,KAGxCC,EAAWC,iBAA6B,MACxCC,EAC2D,KAA9D,oBAACF,EAASG,eAAV,aAAC,EAAkBC,mBAAnB,QAAkCL,EAAKM,OAASN,EAAKM,OAIxD,OACE,eAAC,EAAD,CACEP,IAAKA,EACLQ,QAASC,QAAQC,IACjBC,MACE,CACE,mBAAmB,GAAnB,OAAuBC,KAAKC,MAAMZ,EAAKM,OAAvC,MACA,aAAa,GAAb,OAAiBH,EAAjB,OANN,UAUE,eAAC,EAAD,CAAchB,OAAQA,EAAtB,WACIA,GAAU,cAAC0B,EAAA,EAAD,IACZ,cAAC,EAAD,CACEC,IAAKpB,EACLqB,IAAI,GACJC,OAlBW,kBAAMnB,GAAU,IAmB3BV,OAAQA,EACRmB,MAAM,MACNW,OAAO,WAGX,cAAC,EAAD,CAAgBlB,IAAKE,EAArB,SACE,+BAAON,U,gBC3CFuB,EAAenC,UAAOoC,QAAV,0PAcZC,EAASrC,kBAAOsC,IAAPtC,CAAH,6HACJuC,KCQAJ,UAhBkB,SAAC,GAAD,IAAGvB,EAAH,EAAGA,KAAM4B,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,OAAhB,OAC/B,eAAC,EAAD,WACE,cAAC,EAAD,CAAe7B,KAAMA,EAAM4B,MAAOA,EAAOE,WAAYD,EAAOE,SAC5D,gCACE,6CACA,cAACC,EAAA,EAAD,UACGH,EAAOI,KAAI,WAAkBC,GAAlB,IAAGlC,EAAH,EAAGA,KAAM4B,EAAT,EAASA,MAAT,OACV,6BACE,cAAC,EAAD,CAAQ7B,MAAO6B,EAAO5B,KAAMA,GAAWA,IADzC,UAAYA,EAAZ,YAAoBkC","file":"static/js/5.386527ee.chunk.js","sourcesContent":["import { useEffect, useMemo, useRef, useState } from 'react';\n\ntype ObserverRect = Omit<DOMRectReadOnly, 'toJSON'>;\n\nconst defaultState: ObserverRect = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nconst browser = typeof window !== 'undefined';\n\nexport function useResizeObserver<T extends HTMLElement = any>() {\n  const frameID = useRef(0);\n  const ref = useRef<T>(null);\n\n  const [rect, setRect] = useState<ObserverRect>(defaultState);\n\n  const observer = useMemo(\n    () =>\n      browser\n        ? new ResizeObserver((entries: any) => {\n            const entry = entries[0];\n\n            if (entry) {\n              cancelAnimationFrame(frameID.current);\n\n              frameID.current = requestAnimationFrame(() => {\n                if (ref.current) {\n                  setRect(entry.contentRect);\n                }\n              });\n            }\n          })\n        : null,\n    []\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      observer.observe(ref.current);\n    }\n\n    return () => {\n      observer.disconnect();\n\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n\n  return [ref, rect] as const;\n}\n","import styled, { keyframes } from \"styled-components\";\nimport { fadeIn } from \"../style/animations\";\n\nconst marquee = keyframes`\n  0%,\n  10% {\n    transform: translate3d(0, 0, 0)\n  }\n\n  90%,\n  100% {\n    transform: translate3d(min(-100% + var(--containerWidth), 0%), 0, 0);\n  }\n`;\n\nexport const Record = styled.button`\n  position: relative;\n  transform-origin: center bottom;\n  background: transparent;\n  border: 0;\n  color: var(--text-color);\n  text-align: left;\n  padding: 0;\n  width: 100%;\n\n  span {\n    animation-play-state: paused;\n  }\n\n  &:focus,\n  &:hover {\n    span > span {\n      animation: ${marquee} max(var(--duration), 2s) ease-in-out infinite both\n        alternate;\n      display: inline-block;\n      animation-play-state: running;\n    }\n  }\n`;\n\nexport const Cover = styled.div<{ loaded: boolean }>`\n  aspect-ratio: 1;\n  object-fit: cover;\n  object-position: center;\n  background-color: rgb(var(--spotify-black));\n  position: relative;\n  transition: 0.25s ease-out;\n\n  &:focus,\n  &:hover {\n    @media (pointer: fine) and (hover: hover) {\n      z-index: var(--z-index-10);\n      transform: perspective(800px) rotateY(-4deg) skewY(-1deg) scale(1.02);\n    }\n\n    &::before {\n      transform: translateX(13%) rotate(80deg);\n    }\n  }\n\n  &::before,\n  &::after {\n    content: ${({ loaded }) => (loaded ? \"''\" : undefined)};\n    position: absolute;\n  }\n\n  &::after {\n    background-image: linear-gradient(\n      45deg,\n      rgba(var(--spotify-white), 0) 50%,\n      rgba(var(--spotify-white), 0.05) 50%,\n      rgba(var(--spotify-white), 0)\n    );\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n  }\n\n  @media (pointer: fine) and (hover: hover) {\n    &::before {\n      border-radius: 50%;\n      top: 2%;\n      left: 2%;\n      right: 2%;\n      bottom: 2%;\n      background-color: rgb(var(--spotify-black));\n      background: linear-gradient(\n            30deg,\n            transparent 40%,\n            rgba(42, 41, 40, 0.85) 40%\n          )\n          no-repeat 100% 0,\n        linear-gradient(\n            60deg,\n            rgba(42, 41, 40, 0.85) 60%,\n            rgba(42, 41, 40, 0) 60%\n          )\n          no-repeat 0 100%,\n        repeating-radial-gradient(\n          #2a2928,\n          #2a2928 4px,\n          #ada9a0 5px,\n          #2a2928 6px\n        );\n      background-size: 50% 100%, 100% 50%, 100% 100%;\n      z-index: -1;\n      transition: 0.35s ease-out;\n      animation: ${fadeIn} 0.5s ease-out;\n    }\n  }\n`;\n\nexport const CoverImage = styled.img<{ loaded: boolean }>`\n  transition: opacity 0.5s ease-out;\n  opacity: ${({ loaded }) => (loaded ? 1 : 0)};\n  border-radius: 8px;\n  overflow: hidden;\n  aspect-ratio: 1;\n`;\n\nexport const Marquee = styled.span`\n  display: block;\n  margin-top: var(--spacing-3);\n  font-weight: 600;\n  font-size: 1.4rem;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`;\n","import { CSSProperties, FC, useRef, useState } from \"react\";\nimport { useResizeObserver } from \"@mantine/hooks\";\nimport Fallback from \"../fallback/Fallback\";\nimport * as styled from \"./Record.styled\";\n\ntype TProps = {\n  cover: string;\n  name: string;\n};\n\ninterface IVariables extends CSSProperties {\n  \"--containerWidth\": string;\n  \"--duration\": string;\n}\n\nconst Record: FC<TProps> = ({ cover, name }) => {\n  const [loaded, setLoaded] = useState(false);\n  const [ref, rect] = useResizeObserver();\n  const labelRef = useRef<HTMLParagraphElement>(null);\n  const duration =\n    ((labelRef.current?.scrollWidth ?? rect.width) - rect.width) * 50;\n\n  const handleLoad = () => setLoaded(true);\n\n  return (\n    <styled.Record\n      ref={ref}\n      onClick={console.log}\n      style={\n        {\n          \"--containerWidth\": `${Math.round(rect.width)}px`,\n          \"--duration\": `${duration}ms`,\n        } as IVariables\n      }\n    >\n      <styled.Cover loaded={loaded}>\n        {!loaded && <Fallback />}\n        <styled.CoverImage\n          src={cover}\n          alt=\"\"\n          onLoad={handleLoad}\n          loaded={loaded}\n          width=\"640\"\n          height=\"640\"\n        />\n      </styled.Cover>\n      <styled.Marquee ref={labelRef}>\n        <span>{name}</span>\n      </styled.Marquee>\n    </styled.Record>\n  );\n};\n\nexport default Record;\n","import styled from \"styled-components\";\nimport { slideInLeft } from \"../style/animations\";\nimport BaseArtist from \"./Artist\";\n\nexport const ArtistDetail = styled.section`\n  display: grid;\n  grid-auto-rows: min-content;\n\n  @media (min-width: 600px) {\n    grid-template-columns: 240px 1fr;\n    gap: var(--spacing-5);\n  }\n\n  @media (min-width: 920px) {\n    gap: var(--spacing-15);\n  }\n`;\n\nexport const Artist = styled(BaseArtist)`\n  animation: ${slideInLeft} 0.25s ease-out both;\n  @media (min-width: 600px) {\n    margin-top: 67px;\n  }\n`;\n","import { FC } from \"react\";\nimport Record from \"../record/Record\";\nimport List from \"../list/List\";\nimport * as styled from \"./ArtistDetail.styled\";\n\ntype TProps = {\n  name: string;\n  image: string;\n  albums: { name: string; image: string }[];\n};\n\nconst ArtistDetail: FC<TProps> = ({ name, image, albums }) => (\n  <styled.ArtistDetail>\n    <styled.Artist name={name} image={image} albumCount={albums.length} />\n    <div>\n      <h2>Discography</h2>\n      <List>\n        {albums.map(({ name, image }, index) => (\n          <li key={`${name}_${index}`}>\n            <Record cover={image} name={name} key={name} />\n          </li>\n        ))}\n      </List>\n    </div>\n  </styled.ArtistDetail>\n);\n\nexport default ArtistDetail;\n"],"sourceRoot":""}